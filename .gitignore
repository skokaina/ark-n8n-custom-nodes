### macOS ###
# General
.DS_Store
.AppleDouble
.LSOverride
scratch.md
.env
tools/fark/bin/fark
services/a2agw/a2agw
.artifacts/
local.mk
.vscode/
/local.mk
.venv/

.venv/

# Coverage reports
coverage/
.coverage
*.lcov
cover.out
htmlcov/

# Python cache files
__pycache__/
*.pyc
*.pyo
*.pyd
.Python

# Local development


# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

### macOS Patch ###
# iCloud generated files
*.icloud

### Terraform ###
# Local .terraform directories
**/.terraform/*
.terraform.lock.hcl

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

### VisualStudioCode ###
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

### VisualStudioCode Patch ###
# Ignore all local history of files
.history
.ionide

### Intellij+all Patch ###
# Ignore everything.
.idea/
*.iws
*.iml
*.ipr

# Runtime binaries
runtime/bin/controller-gen*
cover.out

# artifacts to publish
publish/

# build output directory
out/


# node
node_modules/
coverage/

# Local documentation files
*.local.md
.devspace/
